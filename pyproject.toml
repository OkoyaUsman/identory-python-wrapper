[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "identory"
version = "0.1.0"
description = "A comprehensive Python Wrapper for the Identory browser automation platform"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Okoya Usman", email = "usmanokoya10@gmail.com"},
]
maintainers = [
    {name = "Okoya Usman", email = "usmanokoya10@gmail.com"},
]
keywords = [
    "identory", 
    "browser", 
    "automation", 
    "selenium",
    "pyppeteer" 
    "puppeteer", 
    "proxy", 
    "anti-detection", 
    "fingerprinting",
    "api",
    "sdk",
    "wrapper"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Testing",
    "Topic :: Internet :: WWW/HTTP :: Browsers",
    "Topic :: System :: Networking",
    "Topic :: Security",
]
requires-python = ">=3.8"
dependencies = [
    "requests>=2.25.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0.0",
    "pytest-cov>=2.10.0",
    "pytest-mock>=3.6.0",
    "black>=21.0.0",
    "flake8>=3.9.0",
    "mypy>=0.910",
    "isort>=5.9.0",
    "pre-commit>=2.15.0",
]
test = [
    "pytest>=6.0.0",
    "pytest-cov>=2.10.0",
    "pytest-mock>=3.6.0",
]
docs = [
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.15.0",
]
pyppeteer = [
    "pyppeteer>=1.0.2",
]

[project.urls]
Homepage = "https://identory.com"
Repository = "https://github.com/okoyausman/identory-python-wrapper"
Documentation = "https://docs.identory.com"
Issues = "https://github.com/okoyausman/identory-python-wrapper/issues"
Changelog = "https://github.com/okoyausman/identory-python-wrapper/blob/main/CHANGELOG.md"
Discussions = "https://github.com/okoyausman/identory-python-wrapper/discussions"

[project.scripts]
identory = "identory.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["identory*"]
exclude = ["tests*", "examples*", "docs*"]

[tool.setuptools.package-data]
identory = ["py.typed"]

# Pytest configuration
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["identory"]
omit = [
    "tests/*",
    "examples/*",
    "docs/*",
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | \.venv
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["identory"]
known_third_party = ["requests", "pytest"]

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "requests.*",
    "subprocess.*",
    "platform.*",
]
ignore_missing_imports = true

# Flake8 configuration
[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    ".eggs",
    "*.egg",
]